//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CtpFuture.Net.Swig {

public class CThostFtdcLoginInfoField : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CThostFtdcLoginInfoField(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CThostFtdcLoginInfoField obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CThostFtdcLoginInfoField obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~CThostFtdcLoginInfoField() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CTPFutureApiPINVOKE.delete_CThostFtdcLoginInfoField(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public int FrontID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_FrontID_set(swigCPtr, value);
    } 
    get {
      int ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_FrontID_get(swigCPtr);
      return ret;
    } 
  }

  public int SessionID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_SessionID_set(swigCPtr, value);
    } 
    get {
      int ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_SessionID_get(swigCPtr);
      return ret;
    } 
  }

  public string BrokerID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_BrokerID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_BrokerID_get(swigCPtr);
      return ret;
    } 
  }

  public string UserID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_UserID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_UserID_get(swigCPtr);
      return ret;
    } 
  }

  public string LoginDate {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_LoginDate_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_LoginDate_get(swigCPtr);
      return ret;
    } 
  }

  public string LoginTime {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_LoginTime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_LoginTime_get(swigCPtr);
      return ret;
    } 
  }

  public string reserve1 {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_reserve1_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_reserve1_get(swigCPtr);
      return ret;
    } 
  }

  public string UserProductInfo {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_UserProductInfo_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_UserProductInfo_get(swigCPtr);
      return ret;
    } 
  }

  public string InterfaceProductInfo {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_InterfaceProductInfo_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_InterfaceProductInfo_get(swigCPtr);
      return ret;
    } 
  }

  public string ProtocolInfo {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_ProtocolInfo_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_ProtocolInfo_get(swigCPtr);
      return ret;
    } 
  }

  public string SystemName {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_SystemName_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_SystemName_get(swigCPtr);
      return ret;
    } 
  }

  public string PasswordDeprecated {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_PasswordDeprecated_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_PasswordDeprecated_get(swigCPtr);
      return ret;
    } 
  }

  public string MaxOrderRef {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_MaxOrderRef_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_MaxOrderRef_get(swigCPtr);
      return ret;
    } 
  }

  public string SHFETime {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_SHFETime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_SHFETime_get(swigCPtr);
      return ret;
    } 
  }

  public string DCETime {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_DCETime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_DCETime_get(swigCPtr);
      return ret;
    } 
  }

  public string CZCETime {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_CZCETime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_CZCETime_get(swigCPtr);
      return ret;
    } 
  }

  public string FFEXTime {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_FFEXTime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_FFEXTime_get(swigCPtr);
      return ret;
    } 
  }

  public string MacAddress {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_MacAddress_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_MacAddress_get(swigCPtr);
      return ret;
    } 
  }

  public string OneTimePassword {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_OneTimePassword_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_OneTimePassword_get(swigCPtr);
      return ret;
    } 
  }

  public string INETime {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_INETime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_INETime_get(swigCPtr);
      return ret;
    } 
  }

  public int IsQryControl {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_IsQryControl_set(swigCPtr, value);
    } 
    get {
      int ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_IsQryControl_get(swigCPtr);
      return ret;
    } 
  }

  public string LoginRemark {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_LoginRemark_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_LoginRemark_get(swigCPtr);
      return ret;
    } 
  }

  public string Password {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_Password_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_Password_get(swigCPtr);
      return ret;
    } 
  }

  public string IPAddress {
    set {
      CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_IPAddress_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcLoginInfoField_IPAddress_get(swigCPtr);
      return ret;
    } 
  }

  public CThostFtdcLoginInfoField() : this(CTPFutureApiPINVOKE.new_CThostFtdcLoginInfoField(), true) {
  }

}

}
