//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CtpFuture.Net {

public class CThostFtdcBulletinField : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CThostFtdcBulletinField(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CThostFtdcBulletinField obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CThostFtdcBulletinField obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~CThostFtdcBulletinField() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CTPFutureApiPINVOKE.delete_CThostFtdcBulletinField(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string ExchangeID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_ExchangeID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_ExchangeID_get(swigCPtr);
      return ret;
    } 
  }

  public string TradingDay {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_TradingDay_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_TradingDay_get(swigCPtr);
      return ret;
    } 
  }

  public int BulletinID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_BulletinID_set(swigCPtr, value);
    } 
    get {
      int ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_BulletinID_get(swigCPtr);
      return ret;
    } 
  }

  public int SequenceNo {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_SequenceNo_set(swigCPtr, value);
    } 
    get {
      int ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_SequenceNo_get(swigCPtr);
      return ret;
    } 
  }

  public string NewsType {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_NewsType_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_NewsType_get(swigCPtr);
      return ret;
    } 
  }

  public char NewsUrgency {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_NewsUrgency_set(swigCPtr, value);
    } 
    get {
      char ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_NewsUrgency_get(swigCPtr);
      return ret;
    } 
  }

  public string SendTime {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_SendTime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_SendTime_get(swigCPtr);
      return ret;
    } 
  }

  public string Abstract {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_Abstract_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_Abstract_get(swigCPtr);
      return ret;
    } 
  }

  public string ComeFrom {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_ComeFrom_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_ComeFrom_get(swigCPtr);
      return ret;
    } 
  }

  public string Content {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_Content_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_Content_get(swigCPtr);
      return ret;
    } 
  }

  public string URLLink {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_URLLink_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_URLLink_get(swigCPtr);
      return ret;
    } 
  }

  public string MarketID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcBulletinField_MarketID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcBulletinField_MarketID_get(swigCPtr);
      return ret;
    } 
  }

  public CThostFtdcBulletinField() : this(CTPFutureApiPINVOKE.new_CThostFtdcBulletinField(), true) {
  }

}

}
