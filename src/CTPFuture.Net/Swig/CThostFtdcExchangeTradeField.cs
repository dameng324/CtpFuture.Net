//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CtpFuture.Net {

public class CThostFtdcExchangeTradeField : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CThostFtdcExchangeTradeField(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CThostFtdcExchangeTradeField obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CThostFtdcExchangeTradeField obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~CThostFtdcExchangeTradeField() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CTPFutureApiPINVOKE.delete_CThostFtdcExchangeTradeField(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string ExchangeID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_ExchangeID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_ExchangeID_get(swigCPtr);
      return ret;
    } 
  }

  public string TradeID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradeID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradeID_get(swigCPtr);
      return ret;
    } 
  }

  public char Direction {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_Direction_set(swigCPtr, value);
    } 
    get {
      char ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_Direction_get(swigCPtr);
      return ret;
    } 
  }

  public string OrderSysID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_OrderSysID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_OrderSysID_get(swigCPtr);
      return ret;
    } 
  }

  public string ParticipantID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_ParticipantID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_ParticipantID_get(swigCPtr);
      return ret;
    } 
  }

  public string ClientID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_ClientID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_ClientID_get(swigCPtr);
      return ret;
    } 
  }

  public char TradingRole {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradingRole_set(swigCPtr, value);
    } 
    get {
      char ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradingRole_get(swigCPtr);
      return ret;
    } 
  }

  public string ExchangeInstID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_ExchangeInstID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_ExchangeInstID_get(swigCPtr);
      return ret;
    } 
  }

  public char OffsetFlag {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_OffsetFlag_set(swigCPtr, value);
    } 
    get {
      char ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_OffsetFlag_get(swigCPtr);
      return ret;
    } 
  }

  public char HedgeFlag {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_HedgeFlag_set(swigCPtr, value);
    } 
    get {
      char ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_HedgeFlag_get(swigCPtr);
      return ret;
    } 
  }

  public double Price {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_Price_set(swigCPtr, value);
    } 
    get {
      double ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_Price_get(swigCPtr);
      return ret;
    } 
  }

  public int Volume {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_Volume_set(swigCPtr, value);
    } 
    get {
      int ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_Volume_get(swigCPtr);
      return ret;
    } 
  }

  public string TradeDate {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradeDate_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradeDate_get(swigCPtr);
      return ret;
    } 
  }

  public string TradeTime {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradeTime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradeTime_get(swigCPtr);
      return ret;
    } 
  }

  public char TradeType {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradeType_set(swigCPtr, value);
    } 
    get {
      char ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradeType_get(swigCPtr);
      return ret;
    } 
  }

  public char PriceSource {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_PriceSource_set(swigCPtr, value);
    } 
    get {
      char ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_PriceSource_get(swigCPtr);
      return ret;
    } 
  }

  public string TraderID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TraderID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TraderID_get(swigCPtr);
      return ret;
    } 
  }

  public string OrderLocalID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_OrderLocalID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_OrderLocalID_get(swigCPtr);
      return ret;
    } 
  }

  public string ClearingPartID {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_ClearingPartID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_ClearingPartID_get(swigCPtr);
      return ret;
    } 
  }

  public string BusinessUnit {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_BusinessUnit_set(swigCPtr, value);
    } 
    get {
      string ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_BusinessUnit_get(swigCPtr);
      return ret;
    } 
  }

  public int SequenceNo {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_SequenceNo_set(swigCPtr, value);
    } 
    get {
      int ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_SequenceNo_get(swigCPtr);
      return ret;
    } 
  }

  public char TradeSource {
    set {
      CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradeSource_set(swigCPtr, value);
    } 
    get {
      char ret = CTPFutureApiPINVOKE.CThostFtdcExchangeTradeField_TradeSource_get(swigCPtr);
      return ret;
    } 
  }

  public CThostFtdcExchangeTradeField() : this(CTPFutureApiPINVOKE.new_CThostFtdcExchangeTradeField(), true) {
  }

}

}
